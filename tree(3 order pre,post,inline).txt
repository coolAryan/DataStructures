class TreeNode{
    int data;
    TreeNode left;
    TreeNode right;
    TreeNode(int data)
    {
        this.data=data;
        this.left=null;
        this.right=null;
    }
   static void preorder(TreeNode root)
    {
       if(root==null)
       {
           return;
       }
        System.out.print(root.data+" ");
        preorder(root.left);
        preorder(root.right);
    }
    static void postorder(TreeNode root)
    {
       if(root==null)
       {
           return;
       }
       
        postorder(root.left);
        
        postorder(root.right);
         System.out.print(root.data+" ");
    }
     static void inorder(TreeNode root)
    {
       if(root==null)
       {
           return;
       }
       
        inorder(root.left);
        System.out.print(root.data+" ");
        inorder(root.right);
         
    }
    public static void main(String[] args)
    {
        TreeNode root=new TreeNode(10);
        root.left=new TreeNode(20);
        root.right=new TreeNode(30);
        root.left.left=new TreeNode(40);
        root.left.right=new TreeNode(50);
        root.right.left=new TreeNode(60);
        root.right.right=new TreeNode(70);
        root.left.right.left=new TreeNode(80);
        System.out.println("Pre Order Traversal");
        preorder(root);
         System.out.println();
          System.out.println("Post Order Traversal");
        postorder(root);
         System.out.println();
          System.out.println("In Order Traversal");
        inorder(root);
        
    }
}