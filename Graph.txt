class Graph{
  boolean bi=true;
    static void addE(ArrayList<ArrayList<Integer>> ar, int st, int end,boolean bi)
    {
        
        ar.get(st).add(end); 
        if(bi==true)
        {
        ar.get(end).add(st);
        }
        
    }
    static void print(ArrayList<ArrayList<Integer>> ar){
        for(int i=0;i<ar.size();i++)
        {
            System.out.print(i+" ->");
            for(int j=0;j<ar.get(i).size();j++)
            {
                System.out.print(ar.get(i).get(j)+" ");
            }
            System.out.print("\n");
        }
    }
     static void addEdge(int a[][],int st,int end,boolean bi)
    {
        a[st][end]=1;
        if(bi==true)
        {
            a[end][st]=1;
        }
    }
   static void print(int a[][])
    {
        for(int i=0;i<6;i++)
        {
            for(int j=0;j<6;j++)
            {
                System.out.print(a[i][j]+" ");
            }
            System.out.print("\n");
        }
}
    public static void main(String[] args)
    { 
        int a[][]=new int[6][6];
        //Arrays.fill(a,0);
        addEdge(a,1,0,true);
        addEdge(a,2,0,true);
        addEdge(a,2,5,true);
        addEdge(a,1,3,true);
        addEdge(a,3,4,true);
        addEdge(a,4,1,true);
        print(a);
        ArrayList<ArrayList<Integer>> ar=new ArrayList<ArrayList<Integer>>(6); 
        for (int i = 0; i < 6; i++) 
        {
            ar.add( new ArrayList<Integer>());
        }
        addE(ar,0,1,true);
        addE(ar,0,2,true);
        addE(ar,5,2,true);
        addE(ar,1,3,true);
        addE(ar,3,4,true);
        addE(ar,4,1,true);
        
        print(ar);
    }
}