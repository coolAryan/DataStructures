class Queu{
    int front,rear,cap;
    int a[];
    Queu(int size){
        a=new int[size];
        cap=size;
        front=-1;
        rear=-1;
    }
    void enQueue(int val)
    {
        if(isfull())
        {
            System.out.print("Queue is full\n");
            return;
        }
        if(rear==-1)
        {
            rear=0;
            front=0;
            a[rear]=val;
            return;
        }
        rear=(rear+1)%cap;
        a[rear]=val;
        
    }
    boolean isfull()
    {
        if((front==0 && rear==cap-1) || (rear==front-1))
        {
            return true;
        }
        return false;
    }
     boolean isempty()
    {
        if(rear==-1)
        {
            return true;
        }
        return false;
    }
    void deQueue()
    {
        if(isempty())
        {
            System.out.print("Nothing to delete\n");
            return;
        }
        if(front==rear)
        {
            //System.out.print(a[front]+" ");
            front=-1;rear=-1;
            return;
        }
        front=(front+1)%cap;
        
        
        
    }
    void print()
    {
        if(front<rear)
        {
        for(int i=front;i<=rear;i++)
        {
            System.out.print(a[i]+" ");
        }
        }
        else{
            for(int i=front;i<cap;i++)
            {
              System.out.print(a[i]+" ");   
            }
            for(int i=0;i<=rear;i++)
            {
                 System.out.print(a[i]+" ");
            }
        }
    }
    public static void main(String[] args)
    {
        Queu q=new Queu(5);
        // q.deQueue();
        q.enQueue(1);
        q.enQueue(2);
        q.enQueue(3);
        q.enQueue(4);
        q.enQueue(5);
        q.deQueue();
        q.deQueue();
         q.enQueue(41);
        q.enQueue(52);
        q.enQueue(11);
        q.enQueue(522);
        q.print();
    }
}





