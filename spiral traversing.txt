class TreeNode{
    TreeNode left;
    TreeNode right;
    TreeNode root;
    int data;
    TreeNode(int data)
    {
        this.root=this.left=this.right=null;
        this.data=data;
    }
    static void spiral(TreeNode root)
    {
        Stack<TreeNode> s1=new Stack<TreeNode>();
        Stack<TreeNode> s2=new Stack<TreeNode>();
        
        s1.push(root);
        while(!s1.empty() || !s2.empty())
        {
        while(!s1.isEmpty())
        {
             TreeNode temp=s1.peek();
        s1.pop();
            System.out.print(temp.data+" ");
            if(temp.left!=null)
            {
                s2.push(temp.left);
            }
            if(temp.right!=null)
            {
                s2.push(temp.right);
            }
            
        }
        while(!s2.isEmpty())
        {
             TreeNode temp=s2.peek();
        s2.pop();
           System.out.print(temp.data+" ");
            if(temp.right!=null)
            {
                s1.push(temp.right);
            }
            if(temp.left!=null)
            {
                s1.push(temp.left);
            }
             
        }
        }
        
    
        
    }
    public static void main(String[] args)
    {
        TreeNode root=new TreeNode(10);
        root.left=new TreeNode(20);
        root.right=new TreeNode(30);
        root.left.left=new TreeNode(40);
        root.left.right=new TreeNode(50);
        root.right.left=new TreeNode(60);
        root.right.right=new TreeNode(70);
        root.left.right.left=new TreeNode(80);  
        System.out.println("Spiral Traversing ");
        spiral(root);
    }
}